@page "/BlackJack"
@using System.Reflection.Metadata

<PageTitle>Black Jack</PageTitle>
<h1>Black Jack</h1>

<div>
    <p id=money>Available money: @p.money Current Bet: @p.bet</p>
    <button class="btn btn-primary" id="inBet" name="inBet" @onclick="IncreaseBet">Increase Bet</button>
    <button class="btn btn-primary" id="deBet" name="deBet" @onclick="DecreaseBet">Decrease Bet</button>
    <button class="btn btn-primary" id="startGame" name="startGame" @onclick="StartGame">Start Game</button>

    <p role="status" id="Player">Player worth: @p.worth</p>
    <p role="status">Dealer worth: @dealer.worth</p>
    <p role="status" id=announce> @announce</p>
    <button class="btn btn-primary" id="double" @onclick="_double">Double</button>
    <button class="btn btn-primary" id="hit" @onclick="Hit">Hit</button>
    <button class="btn btn-primary" id="stand" @onclick="Stand">Stand</button>
</div>
@code {
    bool gamelock;    
    Player p = new();
    Player dealer = new();
    string announce = "Please place a Bet";
    bool disableAction = true;

    private void IncreaseBet()
    {
        if (!gamelock)
        {
            if (p.money > 0)
            {
                p.IncreaseBet();
                p.money -= 0.5;
            }
        }
    }
    private void DecreaseBet()
    {
        if (!gamelock)
        {
            if (p.bet > 0)
            {
                p.DecreaseBet();
                p.money += 0.5;
            }
        }
    }
    
    private async Task StartGame()
    {
        if (!gamelock)
        {
            gamelock = true;
            if (p.bet != 0)
            {
                disableAction = false;
                announce = "Game ongoing";
                p.worth = 0;
                p.aceCount = 0;
                dealer.worth = 0;
                dealer.hiddenCard = 0;
                await p.AddPlayerCard();
                StateHasChanged();
                await dealer.AddPlayerCard();
                StateHasChanged();
                await p.AddPlayerCard();
                StateHasChanged();
                dealer.AddHiddenCard();
                if (dealer.worth == 10)
                {
                    if (dealer.hiddenCard == 11)
                    {
                        await Stand();
                        return;
                    }
                }
                else if (dealer.worth == 11)
                {
                    if (dealer.hiddenCard == 10)
                    {
                        await Stand();
                        return;
                    }
                }
                if (p.worth == 21)
                {
                    //BlackJack
                    p.money += p.bet * 1.5;
                    announce = "Blackjack! Won: " + p.bet * 1.5;
                    gamelock = false;
                    disableAction = true;
                }
            }
            else
            {
                announce = "Please place a Bet";
            }
        }
    }
    
    private async Task Hit()
    {
        if (!disableAction)
        {
            await p.AddPlayerCard();
            StateHasChanged();

            if (p.worth > 21)
            {
                if (p.aceCount > 0)
                {
                    p.aceCount--;
                    p.worth -= 10;
                    return;
                }
                //Bust
                //Dealer wins
                announce = "Player has bust! Lost: " + p.bet;
                p.bet = 0;
                disableAction = true;
                gamelock = false;
            }
        }
    }
    
    private async Task Stand()
    {
        if(!disableAction)
        {
            disableAction = true;
            await dealer.CalcHidden();
            StateHasChanged();
            while (dealer.worth < 17)
            {
                await dealer.AddPlayerCard();
                StateHasChanged();
            }
            if (dealer.worth <= 21) {
                if (p.worth < dealer.worth)
                {
                    //Dealer wins
                    announce = "Dealer wins! Lost: " + p.bet;
                    p.bet = 0;
                    gamelock = false;
                    return;
                }
                if (p.worth == dealer.worth)
                {
                    //draw
                    announce = "Draw!";
                    gamelock = false;
                    return;
                }
            }
            else
            {
                announce = "Dealer has bust! Won: " + p.bet;
                p.money += p.bet;
                gamelock = false;
                return;
            }
            //Player wins
            announce = "Player wins! Won: " + p.bet;
            p.money += p.bet;
            gamelock = false;
        }
    }
    
    private async Task _double()
    {
        if (p.bet <= p.money)
        {
            if (!disableAction)
            {
                p.money -= p.bet;
                p.bet *= 2;
                await Hit();
                StateHasChanged();
                await Stand();
                StateHasChanged();
                disableAction = true;
            }
        }
    }
}